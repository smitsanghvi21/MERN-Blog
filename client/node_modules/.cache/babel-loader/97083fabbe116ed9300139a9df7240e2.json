{"ast":null,"code":"var _jsxFileName = \"/Users/smitsanghvi/Desktop/blogapp/client/src/components/CommentForm.js\";\nimport React, { useState } from \"react\";\n\nconst CommentForm = props => {\n  const {\n    name,\n    setArticleInfo\n  } = props;\n  const [userData, setUserData] = useState({\n    name: \"\",\n    comment: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({ ...userData,\n      [name]: value\n    });\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    console.log(name);\n\n    if (userData.name.length > 0 && userData.comment.length > 2) {\n      fetch(`/api/articles/${name}/comment`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userData)\n      }).then(res => res.json()).then(result => {\n        console.log(\"Result is\" + result.data);\n        setArticleInfo(result);\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        console.log(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    value: userData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"comment\",\n    value: userData.comment,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/smitsanghvi/Desktop/blogapp/client/src/components/CommentForm.js"],"names":["React","useState","CommentForm","props","name","setArticleInfo","userData","setUserData","comment","handleChange","e","value","target","handleOnSubmit","preventDefault","console","log","length","fetch","method","headers","body","JSON","stringify","then","res","json","result","data","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BF,KAAjC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,EAAR;AAAYI,IAAAA,OAAO,EAAE;AAArB,GAAD,CAAxC;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEN,MAAAA,IAAF;AAAQO,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAL,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACF,IAAD,GAAQO;AAAvB,KAAD,CAAX;AACD,GAHD;;AAKA,QAAME,cAAc,GAAIH,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACI,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;;AACA,QAAIE,QAAQ,CAACF,IAAT,CAAca,MAAd,GAAuB,CAAvB,IAA4BX,QAAQ,CAACE,OAAT,CAAiBS,MAAjB,GAA0B,CAA1D,EAA6D;AAC3DC,MAAAA,KAAK,CAAE,iBAAgBd,IAAK,UAAvB,EAAkC;AACrCe,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAF4B;AAGrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,QAAf;AAH+B,OAAlC,CAAL,CAKDkB,IALC,CAKKC,GAAD,IAASA,GAAG,CAACC,IAAJ,EALb,EAMDF,IANC,CAOCG,MAAD,IAAY;AACVZ,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAYW,MAAM,CAACC,IAA/B;AACAvB,QAAAA,cAAc,CAACsB,MAAD,CAAd;AAED,OAXD,EAYA;AACA;AACA;AACCE,MAAAA,KAAD,IAAW;AACTd,QAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD,OAjBD;AAmBH;AACF,GAzBC;;AA0BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEvB,QAAQ,CAACF,IAAnC;AAAyC,IAAA,QAAQ,EAAEK,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEH,QAAQ,CAACE,OAAtC;AAA+C,IAAA,QAAQ,EAAEC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAQ,IAAA,OAAO,EAAEI,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CADF;AASD,CA5CD;;AA6CA,eAAeX,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst CommentForm = (props) => {\n  const { name, setArticleInfo } = props;\n  const [userData, setUserData] = useState({ name: \"\", comment: \"\" });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    \n    console.log(name)\n    if (userData.name.length > 0 && userData.comment.length > 2) {\n      fetch(`/api/articles/${name}/comment`, {\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(userData),\n    })\n    .then((res) => res.json())\n    .then(\n      (result) => {\n        console.log(\"Result is\"+result.data)\n        setArticleInfo(result);\n       \n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n  return (\n    <div>\n      <label>Name</label>\n      <input name=\"name\" value={userData.name} onChange={handleChange} />\n      <label>Comment</label>\n      <input name=\"comment\" value={userData.comment} onChange={handleChange} />\n      <button onClick={handleOnSubmit}>Add</button>\n    </div>\n  );\n};\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}