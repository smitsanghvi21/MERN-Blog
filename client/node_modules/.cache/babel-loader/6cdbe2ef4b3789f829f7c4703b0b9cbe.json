{"ast":null,"code":"var _jsxFileName = \"/Users/smitsanghvi/Desktop/blogapp/client/src/Pages/Articles.js\";\nimport React, { useState, useEffect } from \"react\";\nimport articles from \"./Content\";\nimport { Link } from \"react-router-dom\";\nimport ArticleList from \"../components/ArticleList\";\n\nconst Articles = ({\n  match\n}) => {\n  const name = match.params.name;\n  const [articleInfo, setArticleInfo] = useState([]); //fetching url name/handle from the articles Route path\n\n  useEffect(() => {\n    let headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    });\n    console.log(`/api/articles/${name}`);\n    fetch(`/api/articles/${name}`, headers).then(res => res.json()).then(result => {\n      setArticleInfo(result.upvotes);\n      console.log(\"result\" + result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(error);\n    });\n  });\n  console.log(\"after use effect\" + articleInfo); //Return name if url path matches the name of the article\n\n  const foundArticle = articles.find(article => article.name === name); //display articles except the current one\n\n  const otherArticles = articles.filter(article => article.name !== name);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, foundArticle ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Total likes: \", articleInfo.upvotes), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, foundArticle.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, foundArticle.content), /*#__PURE__*/React.createElement(Link, {\n    className: \"btn\",\n    to: \"/articles-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"All blog\")) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Not found\"), /*#__PURE__*/React.createElement(ArticleList, {\n    articles: otherArticles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Articles;","map":{"version":3,"sources":["/Users/smitsanghvi/Desktop/blogapp/client/src/Pages/Articles.js"],"names":["React","useState","useEffect","articles","Link","ArticleList","Articles","match","name","params","articleInfo","setArticleInfo","headers","Headers","Accept","console","log","fetch","then","res","json","result","upvotes","error","foundArticle","find","article","otherArticles","filter","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAEA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C,CAH8B,CAI9B;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,sBAAgB,kBADQ;AAExBC,MAAAA,MAAM,EAAE;AAFgB,KAAZ,CAAd;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBR,IAAK,EAAlC;AACAS,IAAAA,KAAK,CAAE,iBAAgBT,IAAK,EAAvB,EAA0BI,OAA1B,CAAL,CACGM,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVV,MAAAA,cAAc,CAACU,MAAM,CAACC,OAAR,CAAd;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWK,MAAvB;AACD,KANL,EAOI;AACA;AACA;AACCE,IAAAA,KAAD,IAAW;AACTR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,KAZL;AAcD,GApBQ,CAAT;AAsBAR,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBN,WAAjC,EA5B8B,CA6B9B;;AACA,QAAMc,YAAY,GAAGrB,QAAQ,CAACsB,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAAClB,IAAR,KAAiBA,IAA5C,CAArB,CA9B8B,CA+B9B;;AACA,QAAMmB,aAAa,GAAGxB,QAAQ,CAACyB,MAAT,CAAiBF,OAAD,IAAaA,OAAO,CAAClB,IAAR,KAAiBA,IAA9C,CAAtB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBd,WAAW,CAACY,OAA7B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,YAAY,CAACK,KAAlB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,YAAY,CAACM,OAAjB,CAHF,eAKE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,EAAE,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADW,gBAWX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZJ,eAcE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEH,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD,CApDD;;AAqDA,eAAerB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport articles from \"./Content\";\nimport { Link } from \"react-router-dom\";\nimport ArticleList from \"../components/ArticleList\";\n\nconst Articles = ({ match }) => {\n  const name = match.params.name;\n\n  const [articleInfo, setArticleInfo] = useState([]);\n  //fetching url name/handle from the articles Route path\n\n  useEffect(() => {\n    let headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    });\n    console.log(`/api/articles/${name}`)\n    fetch(`/api/articles/${name}`, headers)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setArticleInfo(result.upvotes);\n          console.log(\"result\" + result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      );\n  });\n\n  console.log(\"after use effect\" + articleInfo);\n  //Return name if url path matches the name of the article\n  const foundArticle = articles.find((article) => article.name === name);\n  //display articles except the current one\n  const otherArticles = articles.filter((article) => article.name !== name);\n\n  return (\n    <div>\n      {foundArticle ? (\n        <div>\n          <p>Total likes: {articleInfo.upvotes}</p>\n          <h2>{foundArticle.title}</h2>\n          <p>{foundArticle.content}</p>\n\n          <Link className=\"btn\" to=\"/articles-all\">\n            All blog\n          </Link>\n        </div>\n      ) : (\n        <h4>Not found</h4>\n      )}\n      <ArticleList articles={otherArticles} />\n    </div>\n  );\n};\nexport default Articles;\n"]},"metadata":{},"sourceType":"module"}