{"ast":null,"code":"var _jsxFileName = \"/Users/smitsanghvi/Desktop/blogapp/client/src/Pages/Articles.js\";\nimport React, { useState, useEffect } from \"react\";\nimport articles from \"./Content\";\nimport { Link } from \"react-router-dom\";\nimport ArticleList from \"../components/ArticleList\";\n\nconst Articles = ({\n  match\n}) => {\n  const name = match.params.name;\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  }); //fetching url name/handle from the articles Route path\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      const body = await result.json();\n      console.log(\"body\" + body);\n      setArticleInfo(body);\n    };\n\n    fetchData();\n  }, [name]);\n  console.log(\"after use effect\" + articleInfo.upvotes); //Return name if url path matches the name of the article\n\n  const foundArticle = articles.find(article => article.name === name); //display articles except the current one\n\n  const otherArticles = articles.filter(article => article.name !== name);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, foundArticle ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Total likes: \", articleInfo.upvotes), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, foundArticle.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, foundArticle.content), /*#__PURE__*/React.createElement(Link, {\n    className: \"btn\",\n    to: \"/articles-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"All blog\")) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Not found\"), /*#__PURE__*/React.createElement(ArticleList, {\n    articles: otherArticles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Articles;","map":{"version":3,"sources":["/Users/smitsanghvi/Desktop/blogapp/client/src/Pages/Articles.js"],"names":["React","useState","useEffect","articles","Link","ArticleList","Articles","match","name","params","articleInfo","setArticleInfo","upvotes","comments","fetchData","result","fetch","headers","body","json","console","log","foundArticle","find","article","otherArticles","filter","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAEA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;AAAEW,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C,CAH8B,CAI9B;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,iBAAgBR,IAAK,EAAvB,EAA0B;AAClDS,QAAAA,OAAO,EAAG;AACR,0BAAgB,kBADR;AAER,oBAAU;AAFF;AADwC,OAA1B,CAA1B;AAOA,YAAMC,IAAI,GAAG,MAAMH,MAAM,CAACI,IAAP,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAOH,IAAnB;AACAP,MAAAA,cAAc,CAACO,IAAD,CAAd;AACH,KAXD;;AAYAJ,IAAAA,SAAS;AACZ,GAdU,EAcR,CAACN,IAAD,CAdQ,CAAT;AAgBAY,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAmBX,WAAW,CAACE,OAA3C,EAxB8B,CAyB9B;;AACA,QAAMU,YAAY,GAAGnB,QAAQ,CAACoB,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAAChB,IAAR,KAAiBA,IAA5C,CAArB,CA1B8B,CA2B9B;;AACA,QAAMiB,aAAa,GAAGtB,QAAQ,CAACuB,MAAT,CAAiBF,OAAD,IAAaA,OAAO,CAAChB,IAAR,KAAiBA,IAA9C,CAAtB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGc,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBZ,WAAW,CAACE,OAA7B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKU,YAAY,CAACK,KAAlB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,YAAY,CAACM,OAAjB,CAHF,eAKE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,EAAE,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADW,gBAWX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZJ,eAcE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEH,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD,CAhDD;;AAiDA,eAAenB,QAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport articles from \"./Content\";\nimport { Link } from \"react-router-dom\";\nimport ArticleList from \"../components/ArticleList\";\n\nconst Articles = ({ match }) => {\n  const name = match.params.name;\n\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n  //fetching url name/handle from the articles Route path\n  \n\n\n  useEffect(() => {\n    const fetchData = async () => {\n        const result = await fetch(`/api/articles/${name}`, {\n          headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n           }\n    \n        });\n        const body = await result.json();\n        console.log(\"body\"+body);\n        setArticleInfo(body);\n    }\n    fetchData();\n}, [name]);\n  \n  console.log(\"after use effect\"+articleInfo.upvotes);\n  //Return name if url path matches the name of the article\n  const foundArticle = articles.find((article) => article.name === name);\n  //display articles except the current one\n  const otherArticles = articles.filter((article) => article.name !== name);\n\n  return (\n    <div>\n      {foundArticle ? (\n        <div>\n          <p>Total likes: {articleInfo.upvotes}</p>\n          <h2>{foundArticle.title}</h2>\n          <p>{foundArticle.content}</p>\n\n          <Link className=\"btn\" to=\"/articles-all\">\n            All blog\n          </Link>\n        </div>\n      ) : (\n        <h4>Not found</h4>\n      )}\n      <ArticleList articles={otherArticles} />\n    </div>\n  );\n};\nexport default Articles;\n"]},"metadata":{},"sourceType":"module"}