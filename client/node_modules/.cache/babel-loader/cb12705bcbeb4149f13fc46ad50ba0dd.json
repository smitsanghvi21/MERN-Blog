{"ast":null,"code":"var _jsxFileName = \"/Users/smitsanghvi/Desktop/blogapp/client/src/Pages/Articles.js\";\nimport React, { useState, useEffect } from \"react\";\nimport articles from \"./Content\";\nimport { Link } from \"react-router-dom\";\nimport ArticleList from \"../components/ArticleList\";\n\nconst Articles = ({\n  match\n}) => {\n  const name = match.params.name;\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  }); //fetching url name/handle from the articles Route path\n\n  useEffect(() => {\n    let headers = new Headers({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    });\n    fetch(`/api/articles/${name}`, headers).then(res => res.json(), () => console.l).then(result => {\n      setArticleInfo({\n        upvotes: 33\n      });\n      console.log(\"result\" + result[0].upvotes);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(error);\n    });\n  });\n  console.log(\"after use effect\" + articleInfo); //Return name if url path matches the name of the article\n\n  const foundArticle = articles.find(article => article.name === name); //display articles except the current one\n\n  const otherArticles = articles.filter(article => article.name !== name);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, foundArticle ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Total likes: \", articleInfo.upvotes), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, foundArticle.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, foundArticle.content), /*#__PURE__*/React.createElement(Link, {\n    className: \"btn\",\n    to: \"/articles-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"All blog\")) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Not found\"), /*#__PURE__*/React.createElement(ArticleList, {\n    articles: otherArticles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Articles;","map":{"version":3,"sources":["/Users/smitsanghvi/Desktop/blogapp/client/src/Pages/Articles.js"],"names":["React","useState","useEffect","articles","Link","ArticleList","Articles","match","name","params","articleInfo","setArticleInfo","upvotes","comments","headers","Headers","fetch","then","res","json","console","l","result","log","error","foundArticle","find","article","otherArticles","filter","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAEA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;AAAEW,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C,CAH8B,CAI9B;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,sBAAgB,kBADQ;AAExB,gBAAU;AAFc,KAAZ,CAAd;AAIJC,IAAAA,KAAK,CAAE,iBAAgBR,IAAK,EAAvB,EAAyBM,OAAzB,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EACwB,MAAIC,OAAO,CAACC,CADpC,EAECJ,IAFD,CAGGK,MAAD,IAAY;AACVX,MAAAA,cAAc,CAAC;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAD,CAAd;AACAQ,MAAAA,OAAO,CAACG,GAAR,CAAY,WAASD,MAAM,CAAC,CAAD,CAAN,CAAUV,OAA/B;AACD,KANH,EAOE;AACA;AACA;AACCY,IAAAA,KAAD,IAAW;AACVJ,MAAAA,OAAO,CAACG,GAAR,CAAYC,KAAZ;AACE,KAZL;AAaG,GAlBQ,CAAT;AAqBAJ,EAAAA,OAAO,CAACG,GAAR,CAAY,qBAAmBb,WAA/B,EA7B8B,CA8B9B;;AACA,QAAMe,YAAY,GAAGtB,QAAQ,CAACuB,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAACnB,IAAR,KAAiBA,IAA5C,CAArB,CA/B8B,CAgC9B;;AACA,QAAMoB,aAAa,GAAGzB,QAAQ,CAAC0B,MAAT,CAAiBF,OAAD,IAAaA,OAAO,CAACnB,IAAR,KAAiBA,IAA9C,CAAtB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBf,WAAW,CAACE,OAA7B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKa,YAAY,CAACK,KAAlB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,YAAY,CAACM,OAAjB,CAHF,eAKE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,EAAE,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADW,gBAWX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZJ,eAcE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEH,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAkBD,CArDD;;AAsDA,eAAetB,QAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport articles from \"./Content\";\nimport { Link } from \"react-router-dom\";\nimport ArticleList from \"../components/ArticleList\";\n\nconst Articles = ({ match }) => {\n  const name = match.params.name;\n\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n  //fetching url name/handle from the articles Route path\n  \n\n\n  useEffect(() => {\n    let headers = new Headers({\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n  });\nfetch(`/api/articles/${name}`,headers)\n.then(res => res.json(),()=>console.l)\n.then(\n  (result) => {\n    setArticleInfo({upvotes:33})\n    console.log(\"result\"+result[0].upvotes)\n  },\n  // Note: it's important to handle errors here\n  // instead of a catch() block so that we don't swallow\n  // exceptions from actual bugs in components.\n  (error) => {\n   console.log(error);\n    });\n  }\n)\n  \n  console.log(\"after use effect\"+articleInfo);\n  //Return name if url path matches the name of the article\n  const foundArticle = articles.find((article) => article.name === name);\n  //display articles except the current one\n  const otherArticles = articles.filter((article) => article.name !== name);\n\n  return (\n    <div>\n      {foundArticle ? (\n        <div>\n          <p>Total likes: {articleInfo.upvotes}</p>\n          <h2>{foundArticle.title}</h2>\n          <p>{foundArticle.content}</p>\n\n          <Link className=\"btn\" to=\"/articles-all\">\n            All blog\n          </Link>\n        </div>\n      ) : (\n        <h4>Not found</h4>\n      )}\n      <ArticleList articles={otherArticles} />\n    </div>\n  );\n};\nexport default Articles;\n"]},"metadata":{},"sourceType":"module"}