{"ast":null,"code":"var _jsxFileName = \"/Users/smitsanghvi/Desktop/blogapp/client/src/components/CommentForm.js\";\nimport React, { useState } from \"react\";\n\nconst CommentForm = props => {\n  const {\n    name,\n    setArticleInfo\n  } = props;\n  const initialState = {\n    name: \"\",\n    comment: \"\"\n  };\n  const [userData, setUserData] = useState();\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({ ...userData,\n      [name]: value\n    });\n  }; //sending a post request to post comments\n\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n\n    if (userData.name.length > 0 && userData.comment.length > 2) {\n      fetch(`/api/articles/${name}/comment`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: userData.name,\n          text: userData.comment\n        })\n      }, userData => console.log(userData)).then(res => res.json()).then(result => {\n        setArticleInfo(result);\n        setUserData('');\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        console.log(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"add-comment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    value: userData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"comment\",\n    value: userData.comment,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/smitsanghvi/Desktop/blogapp/client/src/components/CommentForm.js"],"names":["React","useState","CommentForm","props","name","setArticleInfo","initialState","comment","userData","setUserData","handleChange","e","value","target","handleOnSubmit","preventDefault","length","fetch","method","headers","body","JSON","stringify","user","text","console","log","then","res","json","result","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA2BF,KAAjC;AACA,QAAMG,YAAY,GAAC;AACjBF,IAAAA,IAAI,EAAE,EADW;AACPG,IAAAA,OAAO,EAAE;AADF,GAAnB;AAGA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEP,MAAAA,IAAF;AAAQQ,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAJ,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACJ,IAAD,GAAQQ;AAAvB,KAAD,CAAX;AACD,GAHD,CAP6B,CAY7B;;;AACA,QAAME,cAAc,GAAIH,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAIP,QAAQ,CAACJ,IAAT,CAAcY,MAAd,GAAuB,CAAvB,IAA4BR,QAAQ,CAACD,OAAT,CAAiBS,MAAjB,GAA0B,CAA1D,EAA6D;AAC3DC,MAAAA,KAAK,CACF,iBAAgBb,IAAK,UADnB,EAEH;AACEc,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFX;AAGEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAEf,QAAQ,CAACJ,IAAjB;AAAuBoB,UAAAA,IAAI,EAAEhB,QAAQ,CAACD;AAAtC,SAAf;AAHR,OAFG,EAOFC,QAAD,IAAciB,OAAO,CAACC,GAAR,CAAYlB,QAAZ,CAPX,CAAL,CASGmB,IATH,CASSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATjB,EAUGF,IAVH,CAWKG,MAAD,IAAY;AACVzB,QAAAA,cAAc,CAACyB,MAAD,CAAd;AACArB,QAAAA,WAAW,CAAC,EAAD,CAAX;AACD,OAdL,EAeI;AACA;AACA;AACCsB,MAAAA,KAAD,IAAW;AACTN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,OApBL;AAsBD;AACF,GA3BD;;AA4BA,sBACE;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEvB,QAAQ,CAACJ,IAAnC;AAAyC,IAAA,QAAQ,EAAEM,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEF,QAAQ,CAACD,OAAtC;AAA+C,IAAA,QAAQ,EAAEG,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAQ,IAAA,OAAO,EAAEI,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CADF;AASD,CAlDD;;AAmDA,eAAeZ,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst CommentForm = (props) => {\n  const { name, setArticleInfo } = props;\n  const initialState={\n    name: \"\", comment: \"\"\n  }\n  const [userData, setUserData] = useState();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  //sending a post request to post comments\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if (userData.name.length > 0 && userData.comment.length > 2) {\n      fetch(\n        `/api/articles/${name}/comment`,\n        {\n          method: \"post\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ user: userData.name, text: userData.comment }),\n        },\n        (userData) => console.log(userData)\n      )\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            setArticleInfo(result);\n            setUserData('')\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            console.log(error);\n          }\n        );\n    }\n  };\n  return (\n    <div id=\"add-comment-form\">\n      <label>Name</label>\n      <input name=\"name\" value={userData.name} onChange={handleChange} />\n      <label>Comment</label>\n      <input name=\"comment\" value={userData.comment} onChange={handleChange} />\n      <button onClick={handleOnSubmit}>Add</button>\n    </div>\n  );\n};\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}