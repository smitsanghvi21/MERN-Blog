{"ast":null,"code":"var _jsxFileName = \"/Users/smitsanghvi/Desktop/blogapp/client/src/Pages/Articles.js\";\nimport React, { useState, useEffect } from \"react\";\nimport articles from \"./Content\";\nimport { Link } from \"react-router-dom\";\nimport ArticleList from \"../components/ArticleList\";\nimport CommentsList from \"../components/CommentsList\";\n\nconst Articles = ({\n  match\n}) => {\n  const name = match.params.name;\n  const comments = [\"Smit\", \"adding\", \"Harry\", \"Thanks for the info\"];\n  const [articleInfo, setArticleInfo] = useState([]); //fetching url name/handle from the articles Route path\n\n  useEffect(() => {\n    let headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    });\n    fetch(`/api/articles/${name}`, headers).then(res => res.json()).then(result => {\n      setArticleInfo(result);\n      console.log(\"ex\");\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(error);\n    });\n  }, [articleInfo]); //Return name if url path matches the name of the article\n\n  const foundArticle = articles.find(article => article.name === name); //display articles except the current one\n\n  const otherArticles = articles.filter(article => article.name !== name);\n  /*const displayComments=articleInfo.comments.map((item, i) =>{\n    const {user, text} =item;\n    return(\n      <div>\n        <ul>\n          <li key={i}>{user}</li>\n          <li>{text}</li>\n        </ul>\n      </div>\n    )\n  })*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, foundArticle ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Total likes: \", articleInfo.upvotes), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, foundArticle.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, foundArticle.content), /*#__PURE__*/React.createElement(CommentsList, {\n    comments: articleInfo.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"btn\",\n    to: \"/articles-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"All blog\")) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Not found\"), /*#__PURE__*/React.createElement(ArticleList, {\n    articles: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Articles;","map":{"version":3,"sources":["/Users/smitsanghvi/Desktop/blogapp/client/src/Pages/Articles.js"],"names":["React","useState","useEffect","articles","Link","ArticleList","CommentsList","Articles","match","name","params","comments","articleInfo","setArticleInfo","headers","Headers","Accept","fetch","then","res","json","result","console","log","error","foundArticle","find","article","otherArticles","filter","upvotes","title","content","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAEA,QAAME,QAAQ,GAAC,CACb,MADa,EAEb,QAFa,EAGb,OAHa,EAIb,qBAJa,CAAf;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C,CAT8B,CAU9B;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,sBAAgB,kBADQ;AAExBC,MAAAA,MAAM,EAAE;AAFgB,KAAZ,CAAd;AAIAC,IAAAA,KAAK,CAAE,iBAAgBR,IAAK,EAAvB,EAA0BK,OAA1B,CAAL,CACGI,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVR,MAAAA,cAAc,CAACQ,MAAD,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KANL,EAOI;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,KAZL;AAcD,GAnBQ,EAmBN,CAACZ,WAAD,CAnBM,CAAT,CAZ8B,CAiC9B;;AACA,QAAMa,YAAY,GAAGtB,QAAQ,CAACuB,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAAClB,IAAR,KAAiBA,IAA5C,CAArB,CAlC8B,CAmC9B;;AACA,QAAMmB,aAAa,GAAGzB,QAAQ,CAAC0B,MAAT,CAAiBF,OAAD,IAAaA,OAAO,CAAClB,IAAR,KAAiBA,IAA9C,CAAtB;AAEA;;;;;;;;;;;;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgB,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBb,WAAW,CAACkB,OAA7B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,YAAY,CAACM,KAAlB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,YAAY,CAACO,OAAjB,CAHF,eAKE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEpB,WAAW,CAACD,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAOE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,EAAE,EAAC,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADW,gBAaX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdJ,eAgBE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEsB,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD,CArED;;AAsEA,eAAe1B,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport articles from \"./Content\";\nimport { Link } from \"react-router-dom\";\nimport ArticleList from \"../components/ArticleList\";\nimport CommentsList from \"../components/CommentsList\";\n\nconst Articles = ({ match }) => {\n  const name = match.params.name;\n\n  const comments=[\n    \"Smit\",\n    \"adding\",\n    \"Harry\",\n    \"Thanks for the info\"\n  ]\n  const [articleInfo, setArticleInfo] = useState([]);\n  //fetching url name/handle from the articles Route path\n\n  useEffect(() => {\n    let headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    });\n    fetch(`/api/articles/${name}`, headers)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setArticleInfo(result);\n          console.log(\"ex\");\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, [articleInfo]);\n\n  //Return name if url path matches the name of the article\n  const foundArticle = articles.find((article) => article.name === name);\n  //display articles except the current one\n  const otherArticles = articles.filter((article) => article.name !== name);\n\n  /*const displayComments=articleInfo.comments.map((item, i) =>{\n    const {user, text} =item;\n    return(\n      <div>\n        <ul>\n          <li key={i}>{user}</li>\n          <li>{text}</li>\n        </ul>\n      </div>\n    )\n  })*/\n  return (\n    <div>\n      {foundArticle ? (\n        <div>\n          <p>Total likes: {articleInfo.upvotes}</p>\n          <h2>{foundArticle.title}</h2>\n          <p>{foundArticle.content}</p>\n\n          <CommentsList comments={articleInfo.comments} />\n\n          <Link className=\"btn\" to=\"/articles-all\">\n            All blog\n          </Link>\n        </div>\n      ) : (\n        <h4>Not found</h4>\n      )}\n      <ArticleList articles={data} />\n    </div>\n  );\n};\nexport default Articles;\n"]},"metadata":{},"sourceType":"module"}