{"ast":null,"code":"var _jsxFileName = \"/Users/smitsanghvi/Desktop/blogapp/client/src/components/CommentForm.js\";\nimport React, { useState } from \"react\";\n\nconst CommentForm = props => {\n  const {\n    name\n  } = props;\n  const [userData, setUserData] = useState({\n    name: \"\",\n    comment: \"\"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserData({ ...userData,\n      [name]: value\n    });\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    let headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    });\n    alert(userData.name + userData.comment);\n    fetch(`/api/articles/${name}/comment`, headers).then(res => res.json()).then(result => {\n      setUserData(result);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    value: userData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"comment\",\n    value: userData.comment,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/smitsanghvi/Desktop/blogapp/client/src/components/CommentForm.js"],"names":["React","useState","CommentForm","props","name","userData","setUserData","comment","handleChange","e","value","target","handleOnSubmit","preventDefault","headers","Headers","Accept","alert","fetch","then","res","json","result","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,EAAR;AAAYG,IAAAA,OAAO,EAAE;AAArB,GAAD,CAAxC;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEL,MAAAA,IAAF;AAAQM,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAL,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACD,IAAD,GAAQM;AAAvB,KAAD,CAAX;AACD,GAHD;;AAKA,QAAME,cAAc,GAAIH,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACI,cAAF;AACA,QAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,sBAAgB,kBADQ;AAExBC,MAAAA,MAAM,EAAE;AAFgB,KAAZ,CAAd;AAIAC,IAAAA,KAAK,CAACZ,QAAQ,CAACD,IAAT,GAAcC,QAAQ,CAACE,OAAxB,CAAL;AAEAW,IAAAA,KAAK,CAAE,iBAAgBd,IAAK,UAAvB,EAAkCU,OAAlC,CAAL,CACGK,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVhB,MAAAA,WAAW,CAACgB,MAAD,CAAX;AACD,KALL,EAMI;AACA;AACA;AACCC,IAAAA,KAAD,IAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAXL;AAcD,GAtBD;;AAuBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAElB,QAAQ,CAACD,IAAnC;AAAyC,IAAA,QAAQ,EAAEI,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEH,QAAQ,CAACE,OAAtC;AAA+C,IAAA,QAAQ,EAAEC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAQ,IAAA,OAAO,EAAEI,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,CADF;AASD,CAzCD;;AA0CA,eAAeV,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst CommentForm = (props) => {\n  const {name} = props;\n  const [userData, setUserData] = useState({ name: \"\", comment: \"\"});\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    let headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    });\n    alert(userData.name+userData.comment)\n    \n    fetch(`/api/articles/${name}/comment`, headers)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setUserData(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          console.log(error);\n        }\n      );\n  \n  };\n  return (\n    <div>\n      <label>Name</label>\n      <input name=\"name\" value={userData.name} onChange={handleChange} />\n      <label>Comment</label>\n      <input name=\"comment\" value={userData.comment} onChange={handleChange} />\n      <button onClick={handleOnSubmit}>Add</button>\n    </div>\n  );\n};\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}